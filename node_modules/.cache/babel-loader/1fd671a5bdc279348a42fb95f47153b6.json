{"ast":null,"code":"var _jsxFileName = \"/home/andrea/Documentos/AppWeather/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Nav from '../components/Nav/Nav.js';\nimport Cards from '../components/Card/Cards';\nimport Ciudad from '../components/Cuidad/Ciudad.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        var buscar = cities.find(e => e.id === ciudad.id);\n        buscar ? alert('La cuidad ya existe') : setCities(oldCities => [ciudad, ...oldCities]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/ciudad/:ciudadId\",\n      render: ({\n        match\n      }) => /*#__PURE__*/_jsxDEV(Ciudad, {\n        city: onFilter(match.params.ciudadId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/andrea/Documentos/AppWeather/src/containers/App.js"],"names":["React","useState","Route","Nav","Cards","Ciudad","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","apiKey","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","buscar","find","e","alert","onFilter","ciudadId","parseInt","length","match","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AACA,WAASQ,OAAT,CAAiBC,EAAjB,EAAqB;AACnBF,IAAAA,SAAS,CAACG,SAAS,IAAIA,SAAS,CAACC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAA/B,CAAd,CAAT;AACD;;AACD,WAASI,QAAT,CAAkBC,MAAlB,EAA0B;AACxB;AACAC,IAAAA,KAAK,CAAE,oDAAmDD,MAAO,UAASE,MAAO,EAA5E,CAAL,CACGC,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAESG,OAAD,IAAa;AACjB,UAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B;AAC5B,cAAMR,MAAM,GAAG;AACbS,UAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;AAEbC,UAAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;AAGbC,UAAAA,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbtB,UAAAA,EAAE,EAAEW,OAAO,CAACX,EAJC;AAKbuB,UAAAA,IAAI,EAAEZ,OAAO,CAACY,IAAR,CAAaC,KALN;AAMbC,UAAAA,IAAI,EAAEd,OAAO,CAACC,IAAR,CAAaa,IANN;AAObC,UAAAA,IAAI,EAAEf,OAAO,CAACe,IAPD;AAQbL,UAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;AASbe,UAAAA,MAAM,EAAEhB,OAAO,CAACgB,MAAR,CAAeC,GATV;AAUbC,UAAAA,OAAO,EAAElB,OAAO,CAACmB,KAAR,CAAcC,GAVV;AAWbC,UAAAA,QAAQ,EAAErB,OAAO,CAACmB,KAAR,CAAcG;AAXX,SAAf;AAaA,YAAIC,MAAM,GAAErC,MAAM,CAACsC,IAAP,CAAYC,CAAC,IAAGA,CAAC,CAACpC,EAAF,KAASK,MAAM,CAACL,EAAhC,CAAZ;AACAkC,QAAAA,MAAM,GAAGG,KAAK,CAAC,qBAAD,CAAR,GAAkCvC,SAAS,CAACG,SAAS,IAAI,CAACI,MAAD,EAAQ,GAAGJ,SAAX,CAAd,CAAjD;AACD,OAhBD,MAgBO;AACLoC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KAtBH;AAuBD;;AACD,WAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,QAAIlC,MAAM,GAAGR,MAAM,CAACK,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASwC,QAAQ,CAACD,QAAD,CAApC,CAAb;;AACA,QAAGlC,MAAM,CAACoC,MAAP,GAAgB,CAAnB,EAAsB;AAClB,aAAOpC,MAAM,CAAC,CAAD,CAAb;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,GADT;AAEI,MAAA,MAAM,EAAE,mBAAK,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AAFjB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AACA,MAAA,KAAK,MADL;AACM,MAAA,IAAI,EAAC,GADX;AAEA,MAAA,MAAM,EAAE,mBAAK,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEP,MAAf;AAAuB,QAAA,OAAO,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFb;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,KAAD;AACA,MAAA,KAAK,MADL;AACM,MAAA,IAAI,EAAE,mBADZ;AAEA,MAAA,MAAM,EAAE,CAAC;AAAC2C,QAAAA;AAAD,OAAD,kBAAY,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaJ,QAAd;AAAtB;AAAA;AAAA;AAAA;AAAA;AAFpB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAvDQ3C,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Route} from 'react-router-dom'\nimport './App.css';\nimport Nav from '../components/Nav/Nav.js';\nimport Cards from '../components/Card/Cards';\nimport Ciudad from '../components/Cuidad/Ciudad.js'\n\n\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          var buscar= cities.find(e=> e.id === ciudad.id)\n          buscar ? alert('La cuidad ya existe')  :setCities(oldCities => [ciudad,...oldCities]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Route \n          path='/'\n          render={()=> <Nav onSearch={onSearch}/>}\n      /> \n      <Route  \n      exact path='/' \n      render={()=> <Cards cities={cities} onClose={onClose}/>}\n      /> \n      <Route\n      exact path ='/ciudad/:ciudadId'\n      render={({match})=> <Ciudad city={onFilter(match.params.ciudadId)} />}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}